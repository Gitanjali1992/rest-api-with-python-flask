Oct 31 05:05:42 AM   * Serving Flask app 'app'
Oct 31 05:05:42 AM   * Debug mode: on
Oct 31 05:05:42 AM  WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
Oct 31 05:05:42 AM   * Running on all addresses (0.0.0.0)
Oct 31 05:05:42 AM   * Running on http://127.0.0.1:5000
Oct 31 05:05:42 AM   * Running on http://10.210.226.224:5000
Oct 31 05:05:42 AM  Press CTRL+C to quit
Oct 31 05:05:42 AM   * Restarting with stat
Oct 31 05:05:49 AM   * Debugger is active!
Oct 31 05:05:49 AM   * Debugger PIN: 128-009-835
Oct 31 05:06:11 AM   * Serving Flask app 'app'
Oct 31 05:06:11 AM   * Debug mode: on
Oct 31 05:06:11 AM  WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
Oct 31 05:06:11 AM   * Running on all addresses (0.0.0.0)
Oct 31 05:06:11 AM   * Running on http://127.0.0.1:5000
Oct 31 05:06:11 AM   * Running on http://10.210.85.156:5000
Oct 31 05:06:11 AM  Press CTRL+C to quit
Oct 31 05:06:11 AM   * Restarting with stat
Oct 31 05:06:17 AM   * Debugger is active!
Oct 31 05:06:17 AM   * Debugger PIN: 593-370-656
Oct 31 05:06:17 AM  127.0.0.1 - - [30/Oct/2022 23:36:17] "GET / HTTP/1.1" 404 -
Oct 31 05:06:26 AM  127.0.0.1 - - [30/Oct/2022 23:36:26] "GET / HTTP/1.1" 404 -
Oct 31 05:08:01 AM  127.0.0.1 - - [30/Oct/2022 23:38:01] "POST /register HTTP/1.1" 500 -
Oct 31 05:08:01 AM  Traceback (most recent call last):
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 05:08:01 AM      self.dialect.do_execute(
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 05:08:01 AM      cursor.execute(statement, parameters)
Oct 31 05:08:01 AM  sqlite3.OperationalError: no such table: users
Oct 31 05:08:01 AM  
Oct 31 05:08:01 AM  The above exception was the direct cause of the following exception:
Oct 31 05:08:01 AM  
Oct 31 05:08:01 AM  Traceback (most recent call last):
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__
Oct 31 05:08:01 AM      return self.wsgi_app(environ, start_response)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app
Oct 31 05:08:01 AM      response = self.handle_exception(e)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app
Oct 31 05:08:01 AM      response = self.full_dispatch_request()
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request
Oct 31 05:08:01 AM      rv = self.handle_user_exception(e)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request
Oct 31 05:08:01 AM      rv = self.dispatch_request()
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request
Oct 31 05:08:01 AM      return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 107, in view
Oct 31 05:08:01 AM      return current_app.ensure_sync(self.dispatch_request)(**kwargs)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 188, in dispatch_request
Oct 31 05:08:01 AM      return current_app.ensure_sync(meth)(**kwargs)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/webargs/core.py", line 594, in wrapper
Oct 31 05:08:01 AM      return func(*args, **kwargs)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/flask_smorest/arguments.py", line 82, in wrapper
Oct 31 05:08:01 AM      return func(*f_args, **f_kwargs)
Oct 31 05:08:01 AM    File "/app/resources/user.py", line 19, in post
Oct 31 05:08:01 AM      if UserModel.query.filter(UserModel.username == user_data["username"]).first():
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2823, in first
Oct 31 05:08:01 AM      return self.limit(1)._iter().first()
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2907, in _iter
Oct 31 05:08:01 AM      result = self.session.execute(
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 1714, in execute
Oct 31 05:08:01 AM      result = conn._execute_20(statement, params or {}, execution_options)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1705, in _execute_20
Oct 31 05:08:01 AM      return meth(self, args_10style, kwargs_10style, execution_options)
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 333, in _execute_on_connection
Oct 31 05:08:01 AM      return connection._execute_clauseelement(
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1572, in _execute_clauseelement
Oct 31 05:08:01 AM      ret = self._execute_context(
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1943, in _execute_context
Oct 31 05:08:01 AM      self._handle_dbapi_exception(
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2124, in _handle_dbapi_exception
Oct 31 05:08:01 AM      util.raise_(
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/util/compat.py", line 208, in raise_
Oct 31 05:08:01 AM      raise exception
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 05:08:01 AM      self.dialect.do_execute(
Oct 31 05:08:01 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 05:08:01 AM      cursor.execute(statement, parameters)
Oct 31 05:08:01 AM  sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: users
Oct 31 05:08:01 AM  [SQL: SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password
Oct 31 05:08:01 AM  FROM users
Oct 31 05:08:01 AM  WHERE users.username = ?
Oct 31 05:08:01 AM   LIMIT ? OFFSET ?]
Oct 31 05:08:01 AM  [parameters: ('Gitanjali', 1, 0)]
Oct 31 05:08:01 AM  (Background on this error at: https://sqlalche.me/e/14/e3q8)
Oct 31 05:08:22 AM  127.0.0.1 - - [30/Oct/2022 23:38:22] "GET / HTTP/1.1" 404 -
Oct 31 05:10:13 AM  127.0.0.1 - - [30/Oct/2022 23:40:13] "POST /register HTTP/1.1" 500 -
Oct 31 05:10:13 AM  Traceback (most recent call last):
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 05:10:13 AM      self.dialect.do_execute(
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 05:10:13 AM      cursor.execute(statement, parameters)
Oct 31 05:10:13 AM  sqlite3.OperationalError: no such table: users
Oct 31 05:10:13 AM  
Oct 31 05:10:13 AM  The above exception was the direct cause of the following exception:
Oct 31 05:10:13 AM  
Oct 31 05:10:13 AM  Traceback (most recent call last):
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__
Oct 31 05:10:13 AM      return self.wsgi_app(environ, start_response)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app
Oct 31 05:10:13 AM      response = self.handle_exception(e)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app
Oct 31 05:10:13 AM      response = self.full_dispatch_request()
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request
Oct 31 05:10:13 AM      rv = self.handle_user_exception(e)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request
Oct 31 05:10:13 AM      rv = self.dispatch_request()
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request
Oct 31 05:10:13 AM      return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 107, in view
Oct 31 05:10:13 AM      return current_app.ensure_sync(self.dispatch_request)(**kwargs)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 188, in dispatch_request
Oct 31 05:10:13 AM      return current_app.ensure_sync(meth)(**kwargs)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/webargs/core.py", line 594, in wrapper
Oct 31 05:10:13 AM      return func(*args, **kwargs)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/flask_smorest/arguments.py", line 82, in wrapper
Oct 31 05:10:13 AM      return func(*f_args, **f_kwargs)
Oct 31 05:10:13 AM    File "/app/resources/user.py", line 19, in post
Oct 31 05:10:13 AM      if UserModel.query.filter(UserModel.username == user_data["username"]).first():
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2823, in first
Oct 31 05:10:13 AM      return self.limit(1)._iter().first()
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2907, in _iter
Oct 31 05:10:13 AM      result = self.session.execute(
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 1714, in execute
Oct 31 05:10:13 AM      result = conn._execute_20(statement, params or {}, execution_options)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1705, in _execute_20
Oct 31 05:10:13 AM      return meth(self, args_10style, kwargs_10style, execution_options)
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 333, in _execute_on_connection
Oct 31 05:10:13 AM      return connection._execute_clauseelement(
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1572, in _execute_clauseelement
Oct 31 05:10:13 AM      ret = self._execute_context(
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1943, in _execute_context
Oct 31 05:10:13 AM      self._handle_dbapi_exception(
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2124, in _handle_dbapi_exception
Oct 31 05:10:13 AM      util.raise_(
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/util/compat.py", line 208, in raise_
Oct 31 05:10:13 AM      raise exception
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 05:10:13 AM      self.dialect.do_execute(
Oct 31 05:10:13 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 05:10:13 AM      cursor.execute(statement, parameters)
Oct 31 05:10:13 AM  sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: users
Oct 31 05:10:13 AM  [SQL: SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password
Oct 31 05:10:13 AM  FROM users
Oct 31 05:10:13 AM  WHERE users.username = ?
Oct 31 05:10:13 AM   LIMIT ? OFFSET ?]
Oct 31 05:10:13 AM  [parameters: ('Gitanjali', 1, 0)]
Oct 31 05:10:13 AM  (Background on this error at: https://sqlalche.me/e/14/e3q8)
Oct 31 06:27:41 AM  [2022-10-31 00:57:41 +0000] [1] [INFO] Starting gunicorn 20.1.0
Oct 31 06:27:41 AM  [2022-10-31 00:57:41 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
Oct 31 06:27:41 AM  [2022-10-31 00:57:41 +0000] [1] [INFO] Using worker: sync
Oct 31 06:27:41 AM  [2022-10-31 00:57:41 +0000] [6] [INFO] Booting worker with pid: 6
Oct 31 06:33:25 AM  [2022-10-31 01:03:25 +0000] [1] [INFO] Handling signal: term
Oct 31 06:33:25 AM  [2022-10-31 01:03:25 +0000] [6] [INFO] Worker exiting (pid: 6)
Oct 31 06:33:27 AM  [2022-10-31 01:03:27 +0000] [1] [INFO] Shutting down: Master
Oct 31 06:37:31 AM  [2022-10-31 01:07:31 +0000] [1] [INFO] Starting gunicorn 20.1.0
Oct 31 06:37:31 AM  [2022-10-31 01:07:31 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
Oct 31 06:37:31 AM  [2022-10-31 01:07:31 +0000] [1] [INFO] Using worker: sync
Oct 31 06:37:31 AM  [2022-10-31 01:07:31 +0000] [6] [INFO] Booting worker with pid: 6
Oct 31 06:37:42 AM   * Serving Flask app 'app'
Oct 31 06:37:42 AM   * Debug mode: on
Oct 31 06:37:42 AM  WARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.
Oct 31 06:37:42 AM   * Running on all addresses (0.0.0.0)
Oct 31 06:37:42 AM   * Running on http://127.0.0.1:5000
Oct 31 06:37:42 AM   * Running on http://10.210.187.244:5000
Oct 31 06:37:42 AM  Press CTRL+C to quit
Oct 31 06:37:42 AM   * Restarting with stat
Oct 31 06:37:49 AM   * Debugger is active!
Oct 31 06:37:49 AM   * Debugger PIN: 871-188-211
Oct 31 06:37:49 AM  127.0.0.1 - - [31/Oct/2022 01:07:49] "GET / HTTP/1.1" 404 -
Oct 31 06:53:01 AM  [2022-10-31 01:23:01 +0000] [1] [INFO] Handling signal: term
Oct 31 06:53:01 AM  [2022-10-31 01:23:01 +0000] [6] [INFO] Worker exiting (pid: 6)
Oct 31 06:53:02 AM  [2022-10-31 01:23:02 +0000] [1] [INFO] Shutting down: Master
Oct 31 09:07:57 AM  [2022-10-31 03:37:57 +0000] [1] [INFO] Starting gunicorn 20.1.0
Oct 31 09:07:57 AM  [2022-10-31 03:37:57 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
Oct 31 09:07:57 AM  [2022-10-31 03:37:57 +0000] [1] [INFO] Using worker: sync
Oct 31 09:07:57 AM  [2022-10-31 03:37:57 +0000] [7] [INFO] Booting worker with pid: 7
Oct 31 09:18:04 AM  [2022-10-31 03:48:04 +0000] [1] [INFO] Starting gunicorn 20.1.0
Oct 31 09:18:04 AM  [2022-10-31 03:48:04 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
Oct 31 09:18:04 AM  [2022-10-31 03:48:04 +0000] [1] [INFO] Using worker: sync
Oct 31 09:18:05 AM  [2022-10-31 03:48:04 +0000] [8] [INFO] Booting worker with pid: 8
Oct 31 09:21:45 AM  [2022-10-31 03:51:45 +0000] [1] [INFO] Starting gunicorn 20.1.0
Oct 31 09:21:45 AM  [2022-10-31 03:51:45 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
Oct 31 09:21:45 AM  [2022-10-31 03:51:45 +0000] [1] [INFO] Using worker: sync
Oct 31 09:21:45 AM  [2022-10-31 03:51:45 +0000] [8] [INFO] Booting worker with pid: 8
Oct 31 09:29:36 AM  [2022-10-31 03:59:36 +0000] [8] [ERROR] Error handling request /register
Oct 31 09:29:36 AM  Traceback (most recent call last):
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 09:29:36 AM      self.dialect.do_execute(
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 09:29:36 AM      cursor.execute(statement, parameters)
Oct 31 09:29:36 AM  psycopg2.errors.UndefinedTable: relation "users" does not exist
Oct 31 09:29:36 AM  LINE 2: FROM users
Oct 31 09:29:36 AM               ^
Oct 31 09:29:36 AM  
Oct 31 09:29:36 AM  
Oct 31 09:29:36 AM  The above exception was the direct cause of the following exception:
Oct 31 09:29:36 AM  
Oct 31 09:29:36 AM  Traceback (most recent call last):
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/gunicorn/workers/sync.py", line 136, in handle
Oct 31 09:29:36 AM      self.handle_request(listener, req, client, addr)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/gunicorn/workers/sync.py", line 179, in handle_request
Oct 31 09:29:36 AM      respiter = self.wsgi(environ, resp.start_response)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__
Oct 31 09:29:36 AM      return self.wsgi_app(environ, start_response)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app
Oct 31 09:29:36 AM      response = self.handle_exception(e)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app
Oct 31 09:29:36 AM      response = self.full_dispatch_request()
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request
Oct 31 09:29:36 AM      rv = self.handle_user_exception(e)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request
Oct 31 09:29:36 AM      rv = self.dispatch_request()
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request
Oct 31 09:29:36 AM      return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 107, in view
Oct 31 09:29:36 AM      return current_app.ensure_sync(self.dispatch_request)(**kwargs)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 188, in dispatch_request
Oct 31 09:29:36 AM      return current_app.ensure_sync(meth)(**kwargs)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/webargs/core.py", line 594, in wrapper
Oct 31 09:29:36 AM      return func(*args, **kwargs)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/flask_smorest/arguments.py", line 82, in wrapper
Oct 31 09:29:36 AM      return func(*f_args, **f_kwargs)
Oct 31 09:29:36 AM    File "/app/resources/user.py", line 19, in post
Oct 31 09:29:36 AM      if UserModel.query.filter(UserModel.username == user_data["username"]).first():
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2823, in first
Oct 31 09:29:36 AM      return self.limit(1)._iter().first()
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2907, in _iter
Oct 31 09:29:36 AM      result = self.session.execute(
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 1714, in execute
Oct 31 09:29:36 AM      result = conn._execute_20(statement, params or {}, execution_options)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1705, in _execute_20
Oct 31 09:29:36 AM      return meth(self, args_10style, kwargs_10style, execution_options)
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 333, in _execute_on_connection
Oct 31 09:29:36 AM      return connection._execute_clauseelement(
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1572, in _execute_clauseelement
Oct 31 09:29:36 AM      ret = self._execute_context(
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1943, in _execute_context
Oct 31 09:29:36 AM      self._handle_dbapi_exception(
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2124, in _handle_dbapi_exception
Oct 31 09:29:36 AM      util.raise_(
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/util/compat.py", line 208, in raise_
Oct 31 09:29:36 AM      raise exception
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 09:29:36 AM      self.dialect.do_execute(
Oct 31 09:29:36 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 09:29:36 AM      cursor.execute(statement, parameters)
Oct 31 09:29:36 AM  sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedTable) relation "users" does not exist
Oct 31 09:29:36 AM  LINE 2: FROM users
Oct 31 09:29:36 AM               ^
Oct 31 09:29:36 AM  
Oct 31 09:29:36 AM  [SQL: SELECT users.id AS users_id, users.username AS users_username, users.password AS users_password
Oct 31 09:29:36 AM  FROM users
Oct 31 09:29:36 AM  WHERE users.username = %(username_1)s
Oct 31 09:29:36 AM   LIMIT %(param_1)s]
Oct 31 09:29:36 AM  [parameters: {'username_1': 'Gitanjali', 'param_1': 1}]
Oct 31 09:29:36 AM  (Background on this error at: https://sqlalche.me/e/14/f405)
Oct 31 09:31:22 AM  [2022-10-31 04:01:22 +0000] [8] [ERROR] Error handling request /store
Oct 31 09:31:22 AM  Traceback (most recent call last):
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 09:31:22 AM      self.dialect.do_execute(
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 09:31:22 AM      cursor.execute(statement, parameters)
Oct 31 09:31:22 AM  psycopg2.errors.UndefinedTable: relation "stores" does not exist
Oct 31 09:31:22 AM  LINE 2: FROM stores
Oct 31 09:31:22 AM               ^
Oct 31 09:31:22 AM  
Oct 31 09:31:22 AM  
Oct 31 09:31:22 AM  The above exception was the direct cause of the following exception:
Oct 31 09:31:22 AM  
Oct 31 09:31:22 AM  Traceback (most recent call last):
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/gunicorn/workers/sync.py", line 136, in handle
Oct 31 09:31:22 AM      self.handle_request(listener, req, client, addr)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/gunicorn/workers/sync.py", line 179, in handle_request
Oct 31 09:31:22 AM      respiter = self.wsgi(environ, resp.start_response)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2548, in __call__
Oct 31 09:31:22 AM      return self.wsgi_app(environ, start_response)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2528, in wsgi_app
Oct 31 09:31:22 AM      response = self.handle_exception(e)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 2525, in wsgi_app
Oct 31 09:31:22 AM      response = self.full_dispatch_request()
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1822, in full_dispatch_request
Oct 31 09:31:22 AM      rv = self.handle_user_exception(e)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1820, in full_dispatch_request
Oct 31 09:31:22 AM      rv = self.dispatch_request()
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/app.py", line 1796, in dispatch_request
Oct 31 09:31:22 AM      return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 107, in view
Oct 31 09:31:22 AM      return current_app.ensure_sync(self.dispatch_request)(**kwargs)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask/views.py", line 188, in dispatch_request
Oct 31 09:31:22 AM      return current_app.ensure_sync(meth)(**kwargs)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/flask_smorest/response.py", line 90, in wrapper
Oct 31 09:31:22 AM      func(*args, **kwargs)
Oct 31 09:31:22 AM    File "/app/resources/store.py", line 30, in get
Oct 31 09:31:22 AM      return StoreModel.query.all()
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2772, in all
Oct 31 09:31:22 AM      return self._iter().all()
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/query.py", line 2907, in _iter
Oct 31 09:31:22 AM      result = self.session.execute(
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/orm/session.py", line 1714, in execute
Oct 31 09:31:22 AM      result = conn._execute_20(statement, params or {}, execution_options)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1705, in _execute_20
Oct 31 09:31:22 AM      return meth(self, args_10style, kwargs_10style, execution_options)
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/sql/elements.py", line 333, in _execute_on_connection
Oct 31 09:31:22 AM      return connection._execute_clauseelement(
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1572, in _execute_clauseelement
Oct 31 09:31:22 AM      ret = self._execute_context(
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1943, in _execute_context
Oct 31 09:31:22 AM      self._handle_dbapi_exception(
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 2124, in _handle_dbapi_exception
Oct 31 09:31:22 AM      util.raise_(
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/util/compat.py", line 208, in raise_
Oct 31 09:31:22 AM      raise exception
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/base.py", line 1900, in _execute_context
Oct 31 09:31:22 AM      self.dialect.do_execute(
Oct 31 09:31:22 AM    File "/usr/local/lib/python3.10/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
Oct 31 09:31:22 AM      cursor.execute(statement, parameters)
Oct 31 09:31:22 AM  sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedTable) relation "stores" does not exist
Oct 31 09:31:22 AM  LINE 2: FROM stores
Oct 31 09:31:22 AM               ^
Oct 31 09:31:22 AM  
Oct 31 09:31:22 AM  [SQL: SELECT stores.id AS stores_id, stores.name AS stores_name
Oct 31 09:31:22 AM  FROM stores]
Oct 31 09:31:22 AM  (Background on this error at: https://sqlalche.me/e/14/f405)
Oct 31 09:33:38 AM  [2022-10-31 04:03:38 +0000] [1] [INFO] Handling signal: term
Oct 31 09:33:38 AM  [2022-10-31 04:03:38 +0000] [7] [INFO] Worker exiting (pid: 7)
Oct 31 09:33:39 AM  [2022-10-31 04:03:39 +0000] [1] [INFO] Shutting down: Master
Oct 31 09:37:17 AM  [2022-10-31 04:07:17 +0000] [1] [INFO] Handling signal: term
Oct 31 09:37:17 AM  [2022-10-31 04:07:17 +0000] [8] [INFO] Worker exiting (pid: 8)
Oct 31 09:37:19 AM  [2022-10-31 04:07:19 +0000] [1] [INFO] Shutting down: Master
Oct 31 09:46:54 AM  [2022-10-31 04:16:54 +0000] [1] [INFO] Handling signal: term
Oct 31 09:46:54 AM  [2022-10-31 04:16:54 +0000] [8] [INFO] Worker exiting (pid: 8)
Oct 31 09:46:55 AM  [2022-10-31 04:16:55 +0000] [1] [INFO] Shutting down: Master
Oct 31 06:02:59 PM  [2022-10-31 12:32:59 +0000] [1] [INFO] Starting gunicorn 20.1.0
Oct 31 06:02:59 PM  [2022-10-31 12:32:59 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
Oct 31 06:02:59 PM  [2022-10-31 12:32:59 +0000] [1] [INFO] Using worker: sync
Oct 31 06:02:59 PM  [2022-10-31 12:32:59 +0000] [6] [INFO] Booting worker with pid: 6
Oct 31 06:18:30 PM  [2022-10-31 12:48:30 +0000] [1] [INFO] Handling signal: term
Oct 31 06:18:30 PM  [2022-10-31 12:48:30 +0000] [6] [INFO] Worker exiting (pid: 6)
Oct 31 06:18:31 PM  [2022-10-31 12:48:31 +0000] [1] [INFO] Shutting down: Master
Nov 1 05:42:12 AM  [2022-11-01 00:12:12 +0000] [1] [INFO] Starting gunicorn 20.1.0
Nov 1 05:42:12 AM  [2022-11-01 00:12:12 +0000] [1] [INFO] Listening at: http://0.0.0.0:80 (1)
Nov 1 05:42:12 AM  [2022-11-01 00:12:12 +0000] [1] [INFO] Using worker: sync
Nov 1 05:42:12 AM  [2022-11-01 00:12:12 +0000] [6] [INFO] Booting worker with pid: 6
Nov 1 05:57:48 AM  [2022-11-01 00:27:48 +0000] [1] [INFO] Handling signal: term
Nov 1 05:57:48 AM  [2022-11-01 00:27:48 +0000] [6] [INFO] Worker exiting (pid: 6)
Nov 1 05:57:49 AM  [2022-11-01 00:27:49 +0000] [1] [INFO] Shutting down: Master
